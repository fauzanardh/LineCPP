/**
 * Autogenerated by Thrift Compiler (0.14.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef structs_TYPES_H
#define structs_TYPES_H

#include <iosfwd>

#include <thrift/Thrift.h>
#include <thrift/TApplicationException.h>
#include <thrift/TBase.h>
#include <thrift/protocol/TProtocol.h>
#include <thrift/transport/TTransport.h>

#include <functional>
#include <memory>




class CreateQrSessionRequest;

class CreateQrSessionResponse;

class CreateQrCodeRequest;

class CreateQrCodeResponse;

class CreatePinCodeRequest;

class CreatePinCodeResponse;

class CancelPinCodeRequest;

class VerifyCertificateRequest;

class QrCodeLoginRequest;

class QrCodeLoginResponse;

class CheckQrCodeVerifiedRequest;

class CheckPinCodeVerifiedRequest;

class GetLoginActorContextRequest;

class GetLoginActorContextResponse;

class VerifyPinCodeRequest;

class VerifyQrCodeRequest;


class CreateQrSessionRequest : public virtual ::apache::thrift::TBase {
 public:

  CreateQrSessionRequest(const CreateQrSessionRequest&);
  CreateQrSessionRequest& operator=(const CreateQrSessionRequest&);
  CreateQrSessionRequest() {
  }

  virtual ~CreateQrSessionRequest() noexcept;

  bool operator == (const CreateQrSessionRequest & /* rhs */) const
  {
    return true;
  }
  bool operator != (const CreateQrSessionRequest &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const CreateQrSessionRequest & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  virtual void printTo(std::ostream& out) const;
};

void swap(CreateQrSessionRequest &a, CreateQrSessionRequest &b);

std::ostream& operator<<(std::ostream& out, const CreateQrSessionRequest& obj);

typedef struct _CreateQrSessionResponse__isset {
  _CreateQrSessionResponse__isset() : authSessionId(false) {}
  bool authSessionId :1;
} _CreateQrSessionResponse__isset;

class CreateQrSessionResponse : public virtual ::apache::thrift::TBase {
 public:

  CreateQrSessionResponse(const CreateQrSessionResponse&);
  CreateQrSessionResponse& operator=(const CreateQrSessionResponse&);
  CreateQrSessionResponse() : authSessionId() {
  }

  virtual ~CreateQrSessionResponse() noexcept;
  std::string authSessionId;

  _CreateQrSessionResponse__isset __isset;

  void __set_authSessionId(const std::string& val);

  bool operator == (const CreateQrSessionResponse & rhs) const
  {
    if (!(authSessionId == rhs.authSessionId))
      return false;
    return true;
  }
  bool operator != (const CreateQrSessionResponse &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const CreateQrSessionResponse & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  virtual void printTo(std::ostream& out) const;
};

void swap(CreateQrSessionResponse &a, CreateQrSessionResponse &b);

std::ostream& operator<<(std::ostream& out, const CreateQrSessionResponse& obj);

typedef struct _CreateQrCodeRequest__isset {
  _CreateQrCodeRequest__isset() : authSessionId(false) {}
  bool authSessionId :1;
} _CreateQrCodeRequest__isset;

class CreateQrCodeRequest : public virtual ::apache::thrift::TBase {
 public:

  CreateQrCodeRequest(const CreateQrCodeRequest&);
  CreateQrCodeRequest& operator=(const CreateQrCodeRequest&);
  CreateQrCodeRequest() : authSessionId() {
  }

  virtual ~CreateQrCodeRequest() noexcept;
  std::string authSessionId;

  _CreateQrCodeRequest__isset __isset;

  void __set_authSessionId(const std::string& val);

  bool operator == (const CreateQrCodeRequest & rhs) const
  {
    if (!(authSessionId == rhs.authSessionId))
      return false;
    return true;
  }
  bool operator != (const CreateQrCodeRequest &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const CreateQrCodeRequest & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  virtual void printTo(std::ostream& out) const;
};

void swap(CreateQrCodeRequest &a, CreateQrCodeRequest &b);

std::ostream& operator<<(std::ostream& out, const CreateQrCodeRequest& obj);

typedef struct _CreateQrCodeResponse__isset {
  _CreateQrCodeResponse__isset() : callbackUrl(false) {}
  bool callbackUrl :1;
} _CreateQrCodeResponse__isset;

class CreateQrCodeResponse : public virtual ::apache::thrift::TBase {
 public:

  CreateQrCodeResponse(const CreateQrCodeResponse&);
  CreateQrCodeResponse& operator=(const CreateQrCodeResponse&);
  CreateQrCodeResponse() : callbackUrl() {
  }

  virtual ~CreateQrCodeResponse() noexcept;
  std::string callbackUrl;

  _CreateQrCodeResponse__isset __isset;

  void __set_callbackUrl(const std::string& val);

  bool operator == (const CreateQrCodeResponse & rhs) const
  {
    if (!(callbackUrl == rhs.callbackUrl))
      return false;
    return true;
  }
  bool operator != (const CreateQrCodeResponse &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const CreateQrCodeResponse & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  virtual void printTo(std::ostream& out) const;
};

void swap(CreateQrCodeResponse &a, CreateQrCodeResponse &b);

std::ostream& operator<<(std::ostream& out, const CreateQrCodeResponse& obj);

typedef struct _CreatePinCodeRequest__isset {
  _CreatePinCodeRequest__isset() : authSessionId(false) {}
  bool authSessionId :1;
} _CreatePinCodeRequest__isset;

class CreatePinCodeRequest : public virtual ::apache::thrift::TBase {
 public:

  CreatePinCodeRequest(const CreatePinCodeRequest&);
  CreatePinCodeRequest& operator=(const CreatePinCodeRequest&);
  CreatePinCodeRequest() : authSessionId() {
  }

  virtual ~CreatePinCodeRequest() noexcept;
  std::string authSessionId;

  _CreatePinCodeRequest__isset __isset;

  void __set_authSessionId(const std::string& val);

  bool operator == (const CreatePinCodeRequest & rhs) const
  {
    if (!(authSessionId == rhs.authSessionId))
      return false;
    return true;
  }
  bool operator != (const CreatePinCodeRequest &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const CreatePinCodeRequest & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  virtual void printTo(std::ostream& out) const;
};

void swap(CreatePinCodeRequest &a, CreatePinCodeRequest &b);

std::ostream& operator<<(std::ostream& out, const CreatePinCodeRequest& obj);

typedef struct _CreatePinCodeResponse__isset {
  _CreatePinCodeResponse__isset() : pinCode(false) {}
  bool pinCode :1;
} _CreatePinCodeResponse__isset;

class CreatePinCodeResponse : public virtual ::apache::thrift::TBase {
 public:

  CreatePinCodeResponse(const CreatePinCodeResponse&);
  CreatePinCodeResponse& operator=(const CreatePinCodeResponse&);
  CreatePinCodeResponse() : pinCode() {
  }

  virtual ~CreatePinCodeResponse() noexcept;
  std::string pinCode;

  _CreatePinCodeResponse__isset __isset;

  void __set_pinCode(const std::string& val);

  bool operator == (const CreatePinCodeResponse & rhs) const
  {
    if (!(pinCode == rhs.pinCode))
      return false;
    return true;
  }
  bool operator != (const CreatePinCodeResponse &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const CreatePinCodeResponse & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  virtual void printTo(std::ostream& out) const;
};

void swap(CreatePinCodeResponse &a, CreatePinCodeResponse &b);

std::ostream& operator<<(std::ostream& out, const CreatePinCodeResponse& obj);

typedef struct _CancelPinCodeRequest__isset {
  _CancelPinCodeRequest__isset() : authSessionId(false) {}
  bool authSessionId :1;
} _CancelPinCodeRequest__isset;

class CancelPinCodeRequest : public virtual ::apache::thrift::TBase {
 public:

  CancelPinCodeRequest(const CancelPinCodeRequest&);
  CancelPinCodeRequest& operator=(const CancelPinCodeRequest&);
  CancelPinCodeRequest() : authSessionId() {
  }

  virtual ~CancelPinCodeRequest() noexcept;
  std::string authSessionId;

  _CancelPinCodeRequest__isset __isset;

  void __set_authSessionId(const std::string& val);

  bool operator == (const CancelPinCodeRequest & rhs) const
  {
    if (!(authSessionId == rhs.authSessionId))
      return false;
    return true;
  }
  bool operator != (const CancelPinCodeRequest &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const CancelPinCodeRequest & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  virtual void printTo(std::ostream& out) const;
};

void swap(CancelPinCodeRequest &a, CancelPinCodeRequest &b);

std::ostream& operator<<(std::ostream& out, const CancelPinCodeRequest& obj);

typedef struct _VerifyCertificateRequest__isset {
  _VerifyCertificateRequest__isset() : authSessionId(false), certificate(false) {}
  bool authSessionId :1;
  bool certificate :1;
} _VerifyCertificateRequest__isset;

class VerifyCertificateRequest : public virtual ::apache::thrift::TBase {
 public:

  VerifyCertificateRequest(const VerifyCertificateRequest&);
  VerifyCertificateRequest& operator=(const VerifyCertificateRequest&);
  VerifyCertificateRequest() : authSessionId(), certificate() {
  }

  virtual ~VerifyCertificateRequest() noexcept;
  std::string authSessionId;
  std::string certificate;

  _VerifyCertificateRequest__isset __isset;

  void __set_authSessionId(const std::string& val);

  void __set_certificate(const std::string& val);

  bool operator == (const VerifyCertificateRequest & rhs) const
  {
    if (!(authSessionId == rhs.authSessionId))
      return false;
    if (!(certificate == rhs.certificate))
      return false;
    return true;
  }
  bool operator != (const VerifyCertificateRequest &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const VerifyCertificateRequest & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  virtual void printTo(std::ostream& out) const;
};

void swap(VerifyCertificateRequest &a, VerifyCertificateRequest &b);

std::ostream& operator<<(std::ostream& out, const VerifyCertificateRequest& obj);

typedef struct _QrCodeLoginRequest__isset {
  _QrCodeLoginRequest__isset() : authSessionId(false), systemName(false), autoLoginIsRequired(false) {}
  bool authSessionId :1;
  bool systemName :1;
  bool autoLoginIsRequired :1;
} _QrCodeLoginRequest__isset;

class QrCodeLoginRequest : public virtual ::apache::thrift::TBase {
 public:

  QrCodeLoginRequest(const QrCodeLoginRequest&);
  QrCodeLoginRequest& operator=(const QrCodeLoginRequest&);
  QrCodeLoginRequest() : authSessionId(), systemName(), autoLoginIsRequired(0) {
  }

  virtual ~QrCodeLoginRequest() noexcept;
  std::string authSessionId;
  std::string systemName;
  bool autoLoginIsRequired;

  _QrCodeLoginRequest__isset __isset;

  void __set_authSessionId(const std::string& val);

  void __set_systemName(const std::string& val);

  void __set_autoLoginIsRequired(const bool val);

  bool operator == (const QrCodeLoginRequest & rhs) const
  {
    if (!(authSessionId == rhs.authSessionId))
      return false;
    if (!(systemName == rhs.systemName))
      return false;
    if (!(autoLoginIsRequired == rhs.autoLoginIsRequired))
      return false;
    return true;
  }
  bool operator != (const QrCodeLoginRequest &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const QrCodeLoginRequest & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  virtual void printTo(std::ostream& out) const;
};

void swap(QrCodeLoginRequest &a, QrCodeLoginRequest &b);

std::ostream& operator<<(std::ostream& out, const QrCodeLoginRequest& obj);

typedef struct _QrCodeLoginResponse__isset {
  _QrCodeLoginResponse__isset() : certificate(false), accessToken(false), lastBindTimestamp(false), metaData(false) {}
  bool certificate :1;
  bool accessToken :1;
  bool lastBindTimestamp :1;
  bool metaData :1;
} _QrCodeLoginResponse__isset;

class QrCodeLoginResponse : public virtual ::apache::thrift::TBase {
 public:

  QrCodeLoginResponse(const QrCodeLoginResponse&);
  QrCodeLoginResponse& operator=(const QrCodeLoginResponse&);
  QrCodeLoginResponse() : certificate(), accessToken(), lastBindTimestamp(0) {
  }

  virtual ~QrCodeLoginResponse() noexcept;
  std::string certificate;
  std::string accessToken;
  int64_t lastBindTimestamp;
  std::map<std::string, std::string>  metaData;

  _QrCodeLoginResponse__isset __isset;

  void __set_certificate(const std::string& val);

  void __set_accessToken(const std::string& val);

  void __set_lastBindTimestamp(const int64_t val);

  void __set_metaData(const std::map<std::string, std::string> & val);

  bool operator == (const QrCodeLoginResponse & rhs) const
  {
    if (!(certificate == rhs.certificate))
      return false;
    if (!(accessToken == rhs.accessToken))
      return false;
    if (!(lastBindTimestamp == rhs.lastBindTimestamp))
      return false;
    if (!(metaData == rhs.metaData))
      return false;
    return true;
  }
  bool operator != (const QrCodeLoginResponse &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const QrCodeLoginResponse & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  virtual void printTo(std::ostream& out) const;
};

void swap(QrCodeLoginResponse &a, QrCodeLoginResponse &b);

std::ostream& operator<<(std::ostream& out, const QrCodeLoginResponse& obj);

typedef struct _CheckQrCodeVerifiedRequest__isset {
  _CheckQrCodeVerifiedRequest__isset() : authSessionId(false) {}
  bool authSessionId :1;
} _CheckQrCodeVerifiedRequest__isset;

class CheckQrCodeVerifiedRequest : public virtual ::apache::thrift::TBase {
 public:

  CheckQrCodeVerifiedRequest(const CheckQrCodeVerifiedRequest&);
  CheckQrCodeVerifiedRequest& operator=(const CheckQrCodeVerifiedRequest&);
  CheckQrCodeVerifiedRequest() : authSessionId() {
  }

  virtual ~CheckQrCodeVerifiedRequest() noexcept;
  std::string authSessionId;

  _CheckQrCodeVerifiedRequest__isset __isset;

  void __set_authSessionId(const std::string& val);

  bool operator == (const CheckQrCodeVerifiedRequest & rhs) const
  {
    if (!(authSessionId == rhs.authSessionId))
      return false;
    return true;
  }
  bool operator != (const CheckQrCodeVerifiedRequest &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const CheckQrCodeVerifiedRequest & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  virtual void printTo(std::ostream& out) const;
};

void swap(CheckQrCodeVerifiedRequest &a, CheckQrCodeVerifiedRequest &b);

std::ostream& operator<<(std::ostream& out, const CheckQrCodeVerifiedRequest& obj);

typedef struct _CheckPinCodeVerifiedRequest__isset {
  _CheckPinCodeVerifiedRequest__isset() : authSessionId(false) {}
  bool authSessionId :1;
} _CheckPinCodeVerifiedRequest__isset;

class CheckPinCodeVerifiedRequest : public virtual ::apache::thrift::TBase {
 public:

  CheckPinCodeVerifiedRequest(const CheckPinCodeVerifiedRequest&);
  CheckPinCodeVerifiedRequest& operator=(const CheckPinCodeVerifiedRequest&);
  CheckPinCodeVerifiedRequest() : authSessionId() {
  }

  virtual ~CheckPinCodeVerifiedRequest() noexcept;
  std::string authSessionId;

  _CheckPinCodeVerifiedRequest__isset __isset;

  void __set_authSessionId(const std::string& val);

  bool operator == (const CheckPinCodeVerifiedRequest & rhs) const
  {
    if (!(authSessionId == rhs.authSessionId))
      return false;
    return true;
  }
  bool operator != (const CheckPinCodeVerifiedRequest &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const CheckPinCodeVerifiedRequest & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  virtual void printTo(std::ostream& out) const;
};

void swap(CheckPinCodeVerifiedRequest &a, CheckPinCodeVerifiedRequest &b);

std::ostream& operator<<(std::ostream& out, const CheckPinCodeVerifiedRequest& obj);

typedef struct _GetLoginActorContextRequest__isset {
  _GetLoginActorContextRequest__isset() : authSessionId(false) {}
  bool authSessionId :1;
} _GetLoginActorContextRequest__isset;

class GetLoginActorContextRequest : public virtual ::apache::thrift::TBase {
 public:

  GetLoginActorContextRequest(const GetLoginActorContextRequest&);
  GetLoginActorContextRequest& operator=(const GetLoginActorContextRequest&);
  GetLoginActorContextRequest() : authSessionId() {
  }

  virtual ~GetLoginActorContextRequest() noexcept;
  std::string authSessionId;

  _GetLoginActorContextRequest__isset __isset;

  void __set_authSessionId(const std::string& val);

  bool operator == (const GetLoginActorContextRequest & rhs) const
  {
    if (!(authSessionId == rhs.authSessionId))
      return false;
    return true;
  }
  bool operator != (const GetLoginActorContextRequest &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const GetLoginActorContextRequest & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  virtual void printTo(std::ostream& out) const;
};

void swap(GetLoginActorContextRequest &a, GetLoginActorContextRequest &b);

std::ostream& operator<<(std::ostream& out, const GetLoginActorContextRequest& obj);

typedef struct _GetLoginActorContextResponse__isset {
  _GetLoginActorContextResponse__isset() : appType(false), accessLocation(false) {}
  bool appType :1;
  bool accessLocation :1;
} _GetLoginActorContextResponse__isset;

class GetLoginActorContextResponse : public virtual ::apache::thrift::TBase {
 public:

  GetLoginActorContextResponse(const GetLoginActorContextResponse&);
  GetLoginActorContextResponse& operator=(const GetLoginActorContextResponse&);
  GetLoginActorContextResponse() : appType(), accessLocation() {
  }

  virtual ~GetLoginActorContextResponse() noexcept;
  std::string appType;
  std::string accessLocation;

  _GetLoginActorContextResponse__isset __isset;

  void __set_appType(const std::string& val);

  void __set_accessLocation(const std::string& val);

  bool operator == (const GetLoginActorContextResponse & rhs) const
  {
    if (!(appType == rhs.appType))
      return false;
    if (!(accessLocation == rhs.accessLocation))
      return false;
    return true;
  }
  bool operator != (const GetLoginActorContextResponse &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const GetLoginActorContextResponse & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  virtual void printTo(std::ostream& out) const;
};

void swap(GetLoginActorContextResponse &a, GetLoginActorContextResponse &b);

std::ostream& operator<<(std::ostream& out, const GetLoginActorContextResponse& obj);

typedef struct _VerifyPinCodeRequest__isset {
  _VerifyPinCodeRequest__isset() : authSessionId(false), pinCode(false) {}
  bool authSessionId :1;
  bool pinCode :1;
} _VerifyPinCodeRequest__isset;

class VerifyPinCodeRequest : public virtual ::apache::thrift::TBase {
 public:

  VerifyPinCodeRequest(const VerifyPinCodeRequest&);
  VerifyPinCodeRequest& operator=(const VerifyPinCodeRequest&);
  VerifyPinCodeRequest() : authSessionId(), pinCode() {
  }

  virtual ~VerifyPinCodeRequest() noexcept;
  std::string authSessionId;
  std::string pinCode;

  _VerifyPinCodeRequest__isset __isset;

  void __set_authSessionId(const std::string& val);

  void __set_pinCode(const std::string& val);

  bool operator == (const VerifyPinCodeRequest & rhs) const
  {
    if (!(authSessionId == rhs.authSessionId))
      return false;
    if (!(pinCode == rhs.pinCode))
      return false;
    return true;
  }
  bool operator != (const VerifyPinCodeRequest &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const VerifyPinCodeRequest & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  virtual void printTo(std::ostream& out) const;
};

void swap(VerifyPinCodeRequest &a, VerifyPinCodeRequest &b);

std::ostream& operator<<(std::ostream& out, const VerifyPinCodeRequest& obj);

typedef struct _VerifyQrCodeRequest__isset {
  _VerifyQrCodeRequest__isset() : authSessionId(false), metaData(false) {}
  bool authSessionId :1;
  bool metaData :1;
} _VerifyQrCodeRequest__isset;

class VerifyQrCodeRequest : public virtual ::apache::thrift::TBase {
 public:

  VerifyQrCodeRequest(const VerifyQrCodeRequest&);
  VerifyQrCodeRequest& operator=(const VerifyQrCodeRequest&);
  VerifyQrCodeRequest() : authSessionId() {
  }

  virtual ~VerifyQrCodeRequest() noexcept;
  std::string authSessionId;
  std::map<std::string, std::string>  metaData;

  _VerifyQrCodeRequest__isset __isset;

  void __set_authSessionId(const std::string& val);

  void __set_metaData(const std::map<std::string, std::string> & val);

  bool operator == (const VerifyQrCodeRequest & rhs) const
  {
    if (!(authSessionId == rhs.authSessionId))
      return false;
    if (!(metaData == rhs.metaData))
      return false;
    return true;
  }
  bool operator != (const VerifyQrCodeRequest &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const VerifyQrCodeRequest & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  virtual void printTo(std::ostream& out) const;
};

void swap(VerifyQrCodeRequest &a, VerifyQrCodeRequest &b);

std::ostream& operator<<(std::ostream& out, const VerifyQrCodeRequest& obj);



#endif
